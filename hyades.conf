#-----------------------------------------------------------------------------#
# Configuration file for Hyades
#
# Any line that doesn't start with a required variable for the script shall be
# ignored.
#
# for Hyades v2.0 and above
#-----------------------------------------------------------------------------#

# Give a name for your watering line and list them below. Detailed
# configuration parameters for each of those lines can be given within blocks
# demarked by curly braces.
LINES : TOPLINE, MIDLINE, BOTLINE

# Name for this line. Should match the name listed in "LINES" parameter
TOPLINE {

    # This one is for humans, sort of a comment/description of the line
    DESCRIPT : Top Level Plants

    # Comma separated list of watering profiles. You should define the Time and
    # watering duration of these profiles elsewhere in this file (See below)
    WTIMINGS : Morning, Evening

    # Should we respect weather prediction? If yes, the script will query
    # openweathermap data and decide on watering based on weather conditions.
    # Value is case insensitive.
    OPENWMAP : true

    # If soil moisture meter data is available (over MQTT). hyades can check 
    # the moisture level and water only if the soil is dry (DRY: 1. WET: 0). 
    # Make sure that moisture meter is working and data is reliable!
    MOISTURE : false

    # Raspberry Pi's GPIO port to switch power for the solenoid Valve
    VALVPORT : 22
}

MIDLINE {
    DESCRIPT : Mid Level Plants
    WTIMINGS : MIDLINE-Morning
    OPENWMAP : false
    MOISTURE : false
    VALVPORT : 23
}

BOTLINE {
    DESCRIPT : Bottom Level Plants
    WTIMINGS : Morning
    OPENWMAP : false
    MOISTURE : false
    VALVPORT : 24
}

# Raspberry Pi's GPIO port to power ON the Relay board
# Use 0 if your relay is always ON.
RLPORT : 0

# Raspberry Pi's GPIO port to power ON the power supply for pump/valves 
# (useful if you have a high power DC pump).
# Use 0 if you don't use a pump and power ON water is sufficient
PSPORT : 18

# Raspberry Pi's GPIO port to power ON the water supply
WSPORT : 21

# Relay type. 0 for low level trigger (default), 1 for high level trigger
RL_TRG : 0

# hydes will not run if this file is present
# If you have other sensors to detect faullts in the setup 
# (for eg: a flow meter), then hydes should not run.
STOPFILE : $HOME/.local/share/bootes/stop-hydes

# Publish the watering activities on MQTT
MQTT_P : true

# Input parameters related to weather information
WeatherInp {
    # This one is for humans, sort of a comment/description
    DESCRIPT : Inputs required to fetch data from openweathermap

    # When should we postpone watering in the event of rain prediction
    # 4 => Light, Moderate, Heavy, Exrteme rain
    # 3 => Moderate, Heavy, Extreme rain
    # 2 => Heavy, Extreme rain
    # 1 => Extreme rain
    ACT_WHEN : 2

    # The location code for your place. Get this from openweathermap.org
    LOC_CODE : 1234567

    # Your API code to fetch weather information from openweathermap.org.
    # Do a free user registration at the site to get this unique code
    API_CODE : 

    # This parameter decides how much to trust the weather prediction.
    # Used only if you have enabled soil moisture meter.
    # If for these many consecutive sessions, soil moisture meter reports
    # dry soil and weather forecast keep talking about wet weather ahead,
    # hyades will ignore weather information and go ahead with watering.
    # WTHP_TOL < 1 would imply complete lack of trust in weather forecast
    WTHP_TOL : 3
}

# Optional inputs for MQTT. Used if MQTT_P is enabled
# Default values are commented in
# IMPORTANT: Please consult the help/documentation before configuring
#            MQTT subscribers
MosQuiTTo {
    DESCRIPT : Optional Inputs for MQTT pub-sub system
#     BROKR_IP : localhost
#     MQTT_PRT : 1883
#     MESG_QOS : 1
#     MQTT_USR :
#     MQTT_PWD :
#     WRNTOPIC : Warnings/$0/$(hostname)
#     INFTOPIC : Information/$0/$(hostname)
}

# Some definitions for watering times. At least one of these definitions should
# be included in a functional LINE block
Morning {

    # This one is for humans, sort of a comment/description of the time setting
    DESCRIPT : Morning Session

    # Time of the day to water the plants (hh:mm:ss, 24hr format).
    # End a time with "/N" for day wise controls. For e.g.:
    # e.g: 07:00:00/2 for 7 am watering on alternate days
    #      09:00:00/3 => 9 am watering every third day, etc.
    WATRTIME : 09:00:00

    # Watering duration (seconds). You can have a comma separated list as well
    # If you have a list, a negative number can be used as "waiting time"
    # between two watering sessions. This may be useful if your pots
    # tend to overflow when water is pumped for longer duration at a stretch
    DURATION : 16
}
Evening {
    DESCRIPT : Evening Session
    WATRTIME : 17:00:00
    DURATION : 14
}
MIDLINE-Morning {
    DESCRIPT : Morning Session for MIDLINE
    WATRTIME : 06:00:00
    DURATION : 6
}
AltEvening-MIDLINE {
    DESCRIPT : Evening Session for MIDLINE, on alternate days
    WATRTIME : 17:00:00/2
    DURATION : 7
}
AltEvening {
    DESCRIPT : Evening on alternate days
    WATRTIME : 17:00:00/2
    DURATION : 14
}
AltMorning {
    DESCRIPT : Morning on alternate days
    WATRTIME : 09:00:00/2
    DURATION : 16
}

